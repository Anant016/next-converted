{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-fetch\";\nimport { Menu, Dropdown, Button } from \"antd\";\nimport Icon from \"@ant-design/icons\";\nimport Footer from \"../components/Footer\";\nimport ItemBox from \"../components/ItemBox\";\nimport * as firebase from \"firebase\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"../config\";\nvar config = firebaseConfig.firebaseConfig;\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst db = firebase.firestore();\nconst db1 = firebase.database();\nexport default class Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: null,\n      search: \"\",\n      length: \"\"\n    });\n  }\n\n  static async getInitialProps({}) {\n    let daata = [];\n    var ref = await db1.ref(\"referrals\");\n    ref.on(\"value\", function (snapshot) {\n      daata.push(snapshot.val());\n    }, function (errorObject) {});\n    return {\n      data: daata,\n      length: daata.length\n    };\n  }\n\n  loadshop() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().category == \"shopping\") {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  loadprod() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().category == \"productive\") {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  loadother() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().category == \"\") {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  loadpayment() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().category == \"payment\") {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  loadtravel() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().category == \"Travel\") {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  loadall() {\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        daata.push(doc.data());\n      });\n      this.setState({\n        data: daata,\n        length: daata.length\n      });\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    let daata = [];\n    let Referrals = db.collection(\"referrals\");\n    Referrals.get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.data().name.toLowerCase().includes(this.state.search.toLowerCase())) {\n          daata.push(doc.data());\n        }\n      });\n      this.setState({\n        data: daata\n      });\n    });\n  }\n\n  render() {\n    let inData = this.props.data[0];\n    console.log(inData);\n\n    const menu = __jsx(Menu, null, __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadall.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"No Filter\")), __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadshop.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"Shopping\")), __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadprod.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"Productivity\")), __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadtravel.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"Travel\")), __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadpayment.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"Payment\")), __jsx(Menu.Item, null, __jsx(\"a\", {\n      onClick: this.loadother.bind(this),\n      rel: \"noopener noreferrer\"\n    }, \"Miscallaneous\")));\n\n    let List = \"\";\n\n    if (this.state.data != null) {\n      List = this.state.data.map(item => __jsx(ItemBox, {\n        key: item.name,\n        item: item\n      }));\n    } else if (inData && inData.length > 0) {\n      List = inData.map(item => __jsx(ItemBox, {\n        key: item.name,\n        item: item\n      }));\n    } else {\n      {\n        List = __jsx(\"h4\", {\n          className: \"mt-5\"\n        }, \"Loading...\");\n      }\n    }\n\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"container mt-2 mb-5\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n      integrity: \"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",\n      crossorigin: \"anonymous\"\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"%PUBLIC_URL%/favicon.ico\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#000000\"\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"Grab Coupon code is coupon codes / referrals for new users. Grab Coupons and Save Money by online offers, deals, discount by our latest Promo codes.  \"\n    }), __jsx(\"meta\", {\n      name: \"keyword\",\n      content: \"grabon, grab on,grabcouponcode,grab coupon,coupon code,coupon, referral, earn money online, first users, new users, save money,save, Promo code, deals, discount,latest coupon, online shopping \"\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: \"Find Latest Coupons & Offers For Online Shopping Sites. GrabOn Will Ensure You Get The Right Promo Codes, Deals & Discount E-Gift Cards For 2020 | SAVE ON EVERYTHING\"\n    }), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"Website\"\n    }), __jsx(\"title\", null, \"Grab Coupon Code\")), __jsx(\"div\", {\n      className: \"row mb-3\"\n    }, __jsx(\"div\", {\n      className: \"col col-12 col-lg-3 col-sm-12 col-md-12 mt-2 mb-2 justify-content-center\"\n    }, __jsx(Dropdown, {\n      overlay: menu\n    }, __jsx(Button, {\n      style: {\n        width: \"100%\",\n        height: \"2.7em\"\n      }\n    }, \"Categories \", __jsx(Icon, {\n      type: \"down\"\n    })))), __jsx(\"div\", {\n      className: \"justify-content-center order-first  mt-2 mb-2  align-items-center col col-12 col-lg-5 col-sm-12 col-md-12 \"\n    }, __jsx(\"div\", {\n      className: \"col justify-content-center  align-items-center\"\n    }, __jsx(\"div\", {\n      className: \"d-flex flex-row\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, __jsx(\"b\", {\n      style: {\n        fontSize: \"210%\",\n        fontFamily: \"Sriracha, cursive\"\n      }\n    }, \"Run-Coupon\"), __jsx(\"span\", {\n      style: {\n        fontSize: \"80%\",\n        fontFamily: \"Sriracha, cursive\",\n        backgroundColor: \"white\"\n      },\n      className: \"rounded-pill border border-danger ml-2\"\n    }, __jsx(\"span\", {\n      className: \"ml-2 mr-2\"\n    }, this.state.data == null && inData ? inData.length : this.state.data.length, \" \", \"offers\"))))), __jsx(\"div\", {\n      className: \"d-flex flex-row ml-2\",\n      style: {\n        fontWeight: \"bold\",\n        fontFamily: \"Sriracha, cursive\"\n      }\n    }, \"for new users only.\"))), __jsx(\"div\", {\n      className: \"col col-12 col-lg-4 col-sm-12 col-md-12  mt-2 mb-2  justify-content-end\"\n    }, __jsx(\"label\", {\n      id: \"search\",\n      style: {\n        display: \"none\"\n      }\n    }, \"Search\"), __jsx(\"input\", {\n      id: \"search\",\n      style: {},\n      className: \"form-control\",\n      placeholder: \"Search\",\n      type: \"text\",\n      name: \"search\",\n      onChange: this.onChange.bind(this),\n      value: this.state.search\n    }))), __jsx(\"div\", {\n      className: \"mb-5\",\n      style: {\n        marginBottom: \"500px\"\n      }\n    }, \" \", List), \".\"), __jsx(Footer, null));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}